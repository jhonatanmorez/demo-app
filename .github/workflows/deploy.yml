name: CI/CD to EC2
on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set Up terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform init
        working-directory: ./terraform
        run: terraform init

      - name: Terraform Apply -  Allow SSH
        working-directory: ./terraform
        run: terraform apply -auto-approve
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1"

      - name: set up node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install dependencies
        run: npm install
      - name: Run tests
        run: npm test
      - name: Log In to Docker hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      - name: Build docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/demo-app:latest .

      - name: Push docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/demo-app:latest

      - name: Deploy on EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          port: ${{ secrets.EC2_PORT }}
          script: |
            echo "Conexion ssh exitosa"
            docker --version
            docker ps
            docker pull ${{ secrets.DOCKER_USERNAME }}/demo-app:latest
            docker rm -f demo-app || true
            docker run -d -p 80:3000 --name demo-app ${{ secrets.DOCKER_USERNAME }}/demo-app:latest

      - name: Terrafom Destroy -  Remove SSH Access
        working-directory: ./terraform
        run: terrafom destroy -auto-approve
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1"
